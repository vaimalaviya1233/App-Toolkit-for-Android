[versions]
agp = "8.13.0"
appcompat = "1.7.1"
aboutlibraries = "13.1.0"
composeMarkdown = "0.5.7"
core = "4.6.2"
coil = "3.3.0"
lottie = "6.6.10"
datastorePreferences = "1.1.7"
firebaseBom = "34.4.0"
composeBom = "2025.10.01"
integrity = "1.5.0"
konfettiCompose = "2.0.5"
lifecycle = "2.9.4"
kotlinxSerializationJson = "1.9.0"
kotlinxCoroutinesAndroid = "1.10.2"
ktorBom = "3.3.1"
coreSplashscreen = "1.0.1"
koin = "4.1.1"
appUpdateKtx = "2.1.0"
kotlin = "2.2.21"
coreKtx = "1.17.0"
activityCompose = "1.11.0"
composeMaterial3 = "1.5.0-alpha07"
composeMaterial3WindowSizeClass = "1.4.0"
reviewKtx = "2.0.2"
billing = "8.0.0"
material = "1.13.0"
playServicesAds = "24.7.0"
multidex = "2.0.1"
navigationCompose = "2.9.5"
userMessagingPlatform = "3.2.0"
workRuntimeKtx = "2.11.0"
google-services = "4.4.4"
google-firebase-crashlytics = "3.0.6"
junittest = "3.7.0"
mannodermaus = "1.14.0.0"
mockk = "1.14.6"
jupiter = "6.0.0"
testCorutines = "1.10.2"
testTurbine = "1.2.1"
truth = "1.7.0"
testManifestTestJunit4Android = "1.9.4"
slf4j = "2.0.17"
robolectric = "4.16"
junit4 = "4.13.2"

[libraries]
# AndroidX & Material
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
compose-markdown = { module = "com.github.jeziellago:compose-markdown", version.ref = "composeMarkdown" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }

# Compose
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
androidx-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "composeMaterial3" }
androidx-material3-window-size = { group = "androidx.compose.material3", name = "material3-window-size-class", version.ref = "composeMaterial3WindowSizeClass" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

# Lifecycle
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

# Firebase & Play Services
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-perf = { module = "com.google.firebase:firebase-perf" }
firebase-appcheck-playintegrity = { module = "com.google.firebase:firebase-appcheck-playintegrity" }
integrity = { module = "com.google.android.play:integrity", version.ref = "integrity" }
app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdateKtx" }
review-ktx = { module = "com.google.android.play:review-ktx", version.ref = "reviewKtx" }
billing = { module = "com.android.billingclient:billing", version.ref = "billing" }
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
user-messaging-platform = { module = "com.google.android.ump:user-messaging-platform", version.ref = "userMessagingPlatform" }

# Networking (Ktor)
ktor-bom = { module = "io.ktor:ktor-bom", version.ref = "ktorBom" }
ktor-client-android = { module = "io.ktor:ktor-client-android" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization" }

# DI (Koin)
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

# Utility
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }
aboutlibraries-compose-m3 = { module = "com.mikepenz:aboutlibraries-compose-m3", version.ref = "aboutlibraries" }
konfetti-compose = { module = "nl.dionsegijn:konfetti-compose", version.ref = "konfettiCompose" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutinesAndroid" }
core = { module = "io.noties.markwon:core", version.ref = "core" }

# --- TESTING ---
# Unit Tests (test folder)
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorBom" }
test-koin-junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }
jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiter" }
mockk-api = { module = "io.mockk:mockk", version.ref = "mockk" }
test-kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "testCorutines" }
test-turbine = { module = "app.cash.turbine:turbine", version.ref = "testTurbine" }
androidx-truth = { module = "androidx.test.ext:truth", version.ref = "truth" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
junit4 = { module = "junit:junit", version.ref = "junit4" }

# Instrumentation Tests (androidTest folder)
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "junittest" }
instrumentation-koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "testManifestTestJunit4Android" }
androidx-ui-test-junit4-android = { group = "androidx.compose.ui", name = "ui-test-junit4-android", version.ref = "testManifestTestJunit4Android" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
about-libraries = { id = "com.mikepenz.aboutlibraries.plugin.android", version.ref = "aboutlibraries" }
googlePlayServices = { id = "com.google.gms.google-services", version.ref = "google-services" }
googleFirebase = { id = "com.google.firebase.crashlytics", version.ref = "google-firebase-crashlytics" }
mannodermaus = { id = "de.mannodermaus.android-junit5", version.ref = "mannodermaus" }

[bundles]
androidx-core = [
    "androidx-core-ktx",
    "androidx-appcompat",
    "androidx-core-splashscreen",
    "androidx-work-runtime-ktx",
    "androidx-multidex",
    "androidx-datastore-preferences",
]

androidx-compose = [
    "androidx-activity-compose",
    "androidx-runtime-livedata",
    "androidx-ui-tooling-preview",
    "androidx-material3",
    "androidx-material3-window-size",
    "androidx-material-icons-extended",
    "androidx-navigation-compose",
]

androidx-lifecycle = [
    "androidx-lifecycle-runtime-ktx",
    "androidx-lifecycle-livedata-ktx",
    "androidx-lifecycle-process",
    "androidx-lifecycle-viewmodel-ktx",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-lifecycle-runtime-compose",
]

firebase = [
    "firebase-analytics",
    "firebase-crashlytics",
    "firebase-perf",
    "firebase-appcheck-playintegrity",
]

google-play = [
    "play-services-ads",
    "user-messaging-platform",
    "material",
    "app-update-ktx",
    "billing",
    "review-ktx",
    "integrity",
]

coil = [
    "coil-compose",
    "coil-gif",
    "coil-network-okhttp",
]

kotlinx = [
    "kotlinx-coroutines-android",
    "kotlinx-coroutines-play-services",
    "kotlinx-serialization-json",
]

ktor = [
    "ktor-client-android",
    "ktor-client-serialization",
    "ktor-client-logging",
    "ktor-client-content-negotiation",
    "ktor-serialization-kotlinx-json",
]

ui-effects = [
    "konfetti-compose",
    "lottie-compose",
]

ui-richtext = [
    "aboutlibraries-compose-m3",
    "core",
    "compose-markdown",
]

koin = [
    "koin-core",
    "koin-compose-viewmodel",
    "koin-android",
]

# For local tests on the JVM (test sourceSet)
unitTest = [
    "jupiter-api",
    "jupiter-params",
    "mockk-api",
    "test-kotlin-coroutines",
    "test-turbine",
    "test-koin-junit5",
    "androidx-truth",
    "ktor-client-mock",
    "robolectric",
    "junit4",
    "slf4j-simple",
]

unitTestRuntime = ["jupiter-engine"]

# For instrumentation tests on an Android device (androidTest sourceSet)
instrumentationTest = [
    "jupiter-api",
    "jupiter-params",
    "mockk-android",
    "test-kotlin-coroutines",
    "test-turbine",
    "instrumentation-koin-compose",
    "androidx-espresso-core",
    "androidx-ui-test-junit4-android",
    "androidx-truth",
]